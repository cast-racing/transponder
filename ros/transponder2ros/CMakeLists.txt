cmake_minimum_required(VERSION 3.8)
project(transponder2ros)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(transponder_msgs REQUIRED)

# git hash and branch
execute_process(
    COMMAND git describe --abbrev=7 --dirty --always --tags
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_VERSION
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

execute_process(
    COMMAND git rev-parse --abbrev-ref HEAD
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_BRANCH
    OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    
add_definitions(-DGIT_INFO="${GIT_BRANCH} - ${GIT_VERSION}")

# Includes
include_directories(
    include
)

# Add executables
add_executable(transponder2ros_node src/transponder2ros_node.cpp
    src/functions_ros.cpp
    src/functions_udp.cpp
    src/transponder2ros.cpp
    )
    ament_target_dependencies(transponder2ros_node 
        rclcpp
        std_msgs
        transponder_msgs
    )
    install(TARGETS
      transponder2ros_node
        DESTINATION lib/${PROJECT_NAME}
    )

  add_executable(debug_node src/debug_node.cpp
    )
    ament_target_dependencies(debug_node 
        rclcpp
        std_msgs
        transponder_msgs
    )
    install(TARGETS
      debug_node
        DESTINATION lib/${PROJECT_NAME}
    )

# Copy over config and launch files
install(DIRECTORY
  # config
  launch
  DESTINATION share/${PROJECT_NAME}/
)

ament_package()
